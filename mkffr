#! /bin/sh
# Makefile file list reformatter.
#
# Replace / update a file list in a Makefile.
#
# If the input is (without the quotes, "<tab>" means "\t")
#
# "<tab>old1 \"
# "<tab>old2 \"
# "<tab>old3"
# "new1"
# "./new2"
# "new2"
#
# then the output will be
#
# "<tab>new1 \"
# "<tab>new2 \"
# "<tab>new3 \"
# "<tab>old1 \"
# "<tab>old2 \"
# "<tab>old3"
#
# (The order of entries has changed because the file names have
# been sorted. Sorting is binary, i. e. it ignores locale settings.)
#
# Written by Guenther Brunthaler in 2008.


while true; do
	case $1 in
		--)
			shift;
			test $# -eq 0 || set -- --error
			continue
			;;
		--version) echo "${0##/*} version 8.281"; exit;;
		-h | --help)
			echo "Usage: ${0##/*} -a | -d"
			set -- --version
			continue
			;;
		"")
			if test $# -eq 0; then
				break
			fi
			set -- --error;	continue
			;;
		*)
			echo "Invalid arguments. Try '${0##/*} --help'." >& 2
			false; exit
			;;
	esac
	shift
done
export LC_ALL
LC_ALL=C
awk '
	{
		sub("^[\t ]+", "")
		sub("[\t \\\\]+$", "")
		sub("^\\./", "")
		print
	}
' | sort | awk '
	function wrline() {
		if (have) {
			printf "\t%s", line
			if (!last) printf " \\"
			print ""
		}
	}

	{
		wrline()
		line= $0
		have= 1
	}
	
	END {
		last= 1
		wrline()
	}
'
