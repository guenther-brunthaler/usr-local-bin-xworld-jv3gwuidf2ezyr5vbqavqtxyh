#! /bin/sh

# v2023.365
set -e
trap "test $? = 0 || echo 'Failed!' >& 2" 0
APP=$0
while :
do
	case $1 in
		--override-script-name=*) APP=${1#*=}; shift;;
		*) break
	esac
done
APP=${APP##*/}; LOCAL_IF=${APP##*_to_}
LOCAL_PORT=${LOCAL_IF##*_port_}; LOCAL_IF=${LOCAL_IF%%_port_*}
LOCAL_IP=`
	PATH=/sbin:/usr/sbin:$PATH
	LC_ALL=C ifconfig "$LOCAL_IF" | sed -e '
		s/.*[^a-z]inet \(addr:\)\?\([0-9.]*\) .*/\2/; t; d
	'
`
: ${LOCAL_IP:="<unknown>"} ${LOCAL_IF:="<unspecified>"}
: ${LOCAL_PORT:="<unknown>"}
wr() {
	local wr cols=66 maxcols=100
	wr=`tput cols 2> /dev/null || echo ${COLUMNS:-$cols}`
	test $wr -lt $maxcols && cols=$wr
	if wr=`command -v fmt 2> /dev/null`
	then
		"$wr" -w$cols -c
	elif wr=`command -v fold 2> /dev/null`
	then
		"$wr" -w$cols -s | sed 's/ *$//'
	else
		cat
	fi | sed '0,/^(c)/ b; /./ b; d'
}
test $# -ge 1 && test -e "$1" || set -- --usage
case $1 in
--help | -h | --usage) wr << EOF; exit
$APP - send files/directories as a tar archive via raw TCP

Usage:
   $APP <files_and_or_directories>

Listens at local port $LOCAL_PORT on interface '$LOCAL_IF' and sends a set of
files/directories as a tar archive (created on the fly) over raw TCP to any
client which connects to this port. (Actually, listens on IP $LOCAL_IP rather
than directly on interface '$LOCAL_IF' because binding to specific interfaces
requires special privileges. But the effect is just the same.)

The specified arguments are directly passed to tar as the files/directories to
be included within the archive.

Use a single argument "*" to recursively send what "ls" would display in the
current directory. (This will omit hidden files in the current directory.)

Use a single argument "." for sending the whole contents of the current
directory (including the directory's own permissions and timestamp, but also
including any hidden files).

IMPORTANT: The interface and port where to actually listen are extracted only
from the script name. So one can easily set up symlinks to the script in order
to "hard-wire" different interface/port combinations. It is also possible to
add an initial argument --override-script-name=<name> which will then be used
as the script name instead of "$APP".

$APP version 15.249

Copyright (c) 2013-2015 Guenther Brunthaler. All rights reserved.

This script is free software.

Distribution is permitted under the terms of the GPLv3.
EOF
esac

tar -cv "$@" | socat -u \
	STDIN \
	TCP4-LISTEN:"$LOCAL_PORT",bind="$LOCAL_IP",reuseaddr
