#! /bin/sh
# Filter for safely encoding / decoding a binary stream.
#
# Version 12.145
#
# (c) 2012 by Superuser.
# This source file is free software.
# Distribution is permitted under the terms of the GPLv3.


die() {
	{
		echo "ERROR: $*" >& 2
		echo "Usage: ${0##*/} ( -e | -d )" "( <passfile> |" \
			"5< /path/to/passfile" \
			"6< /path/to/passfile" \
			"7< /path/to/passfile" \
			"8< /path/to/passfile)"
	} >& 2
	false; exit
}


run() {
	"$@" && return
	die "Command >>>$*<<< failed with return code ${?}!"
}


crypt() {
	local FD MODE ALGO
	FD=$1 MODE=-$2; ALGO=$3
	set -- openssl "$ALGO" -salt -bufsize 10000000 -pass
	if test -n "$PASSFILE"
	then
		set -- "$@" file:"$PASSFILE"
	else
		set -- "$@" fd:$FD
	fi
	run "$@" "$MODE"
}


ENCRYPT=
while :
do
	case $1 in
		-e | --encrypt) ENCRYPT=1;;
		-d | --decrypt) ENCRYPT=0;;
		--) shift; break;;
		-*) die "Unknown option '$1'!";;
		*) break;;
	esac
	shift
done
PASSFILE="$1"; shift
test $# = 0 || die "Excess arguments: '$*'"
if test -n "$PASSFILE"
then
	test -f "$PASSFILE" || die "Password file '$PASSFILE' does not exist!"
fi
test -n "$ENCRYPT" || die "Unspecified operation mode!"
if test $ENCRYPT = 1
then
	crypt 5 e aes-256-cbc | crypt 6 e des-ede3-cbc | crypt 7 e rc4 | crypt 8 e bf-cbc
else
	crypt 8 d bf-cbc | crypt 7 d rc4 | crypt 6 d des-ede3-cbc | crypt 5 d aes-256-cbc
fi
