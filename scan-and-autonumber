#! /bin/sh
# Version 2020.10
# Copyright (c) 2019-2020 Guenther Brunthaler. All rights reserved.
#
# This script is free software.
# Distribution is permitted under the terms of the GPLv3.

counter=scan_counter.txt
digits=3
outfmt='infile-%0${digits}u.%s'
toutext=pnm
foutext=tif
dpi=300
out_opt='-type TrueColor -colorspace sRGB -depth 8 -compress LZW'

set -e
trap 'test $? = 0 || echo "\"$0\" failed!" >& 2' 0

ck_posint() {
	expr x"$OPTARG" : x'[1-9][0-9]*$' > /dev/null
}

dry_run=false
mode=Color
trim=true
rotate180=false
n=
while getopts D:Trd:N:gn opt
do
	case $opt in
		D) ck_posint; dpi=$OPTARG;;
		T) trim=false;;
		r) rotate180=true;;
		d) ck_posint; digits=$OPTARG;;
		N) ck_posint; n=$OPTARG;;
		g) mode=Gray;;
		n) dry_run=true;;
		*) false || exit
	esac
done
shift `expr $OPTIND - 1 || :`

for u in util-linux: ionice flock imagemagick: convert sane-utils: scanimage
do
	case $u in
		*:) p=${u%:};;
		*)
			command -v $u > /dev/null 2>& 1 || {
				echo "Utility '$u' needs to be installed!"
				echo "For some Linux distributions," \
					"this is part of package '$p'."
				false || exit
			} >& 2
	esac
done

eval "outfmt=\"$outfmt\""

exec 5>> "$counter"
flock 5
if test -z "$n"
then
	read n 2> /dev/null < "$counter" || n=1
fi
echo `expr $n + 1` > "$counter"
exec 5>& -

toutfile=`printf "$outfmt" $n "$toutext"`
foutfile=`printf "$outfmt" $n "$foutext"`

simrun() {
	$dry_run || return
	echo "SIMULATION: $*"
}

echo "Scanning to $foutfile..." >& 2
set scanimage --mode=$mode --resolution=$dpi
simrun "$* > $toutfile" || "$@" > "$toutfile"

set nice ionice -n 5 convert -units pixelsperinch -density $dpi
$trim && set "$@" -trim
$rotate180 && set "$@" -rotate 180
set "$@" "$toutfile" $out_opt "$foutfile"
r="rm $toutfile"
simrun "$* && $r &" || { { "$@" && $r; } & }
