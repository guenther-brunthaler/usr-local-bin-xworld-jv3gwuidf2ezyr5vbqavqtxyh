#! /bin/sh
# Version 2019.186
# Copyright (c) 2019 Guenther Brunthaler. All rights reserved.
#
# This script is free software.
# Distribution is permitted under the terms of the GPLv3.

counter=scan_counter.txt
digits=3
outfmt='infile-%0${digits}u.%s'
toutext=pnm
foutext=png
dpi=300

set -e
trap 'test $? = 0 || echo "\"$0\" failed!" >& 2' 0

ck_posint() {
	expr x"$OPTARG" : x'[1-9][0-9]*$' > /dev/null
}

dry_run=false
mode=Color
cvopt=-trim
n=
while getopts D:Td:N:gn opt
do
	case $opt in
		D) ck_posint; dpi=$OPTARG;;
		T) cvopt=;;
		d) ck_posint; digits=$OPTARG;;
		N) ck_posint; n=$OPTARG;;
		g) mode=Gray;;
		n) dry_run=true;;
		*) false || exit
	esac
done
shift `expr $OPTIND - 1 || :`

eval "outfmt=\"$outfmt\""

test "$n" || read n 2> /dev/null < "$counter" || n=1
toutfile=`printf "$outfmt" $n "$toutext"`
foutfile=`printf "$outfmt" $n "$foutext"`

simrun() {
	$dry_run || return
	echo "SIMULATION: $*"
}

echo "Scanning to $foutfile..." >& 2
set scanimage --mode=$mode --resolution=$dpi
simrun "$* > $toutfile" || "$@" > "$toutfile"
set nice ionice -n 5 convert -units pixelsperinch -density $dpi $cvopt \
	"$toutfile" "$foutfile"
r="rm $toutfile"
simrun "$* && $r &" || {
	"$@" && $r &
	echo `expr $n + 1` > "$counter"
}
