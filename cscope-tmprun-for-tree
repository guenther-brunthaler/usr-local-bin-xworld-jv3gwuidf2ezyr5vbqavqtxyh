#! /bin/sh


die() {
	echo "ERROR: $*" >& 2
	false; exit
}


run() {
	"$@" && return
	die "Could not execute >>>$*<<<: return code ${?}!"
}


system() {
	REPLY=`run "$@"` || exit
}


PERMANENT=
UNCONDITIONAL_REBUILD=
KERNEL_MODE=
QUERY_EXISTING=
while getopts kupq OPT
do
	case $OPT in
		k) KERNEL_MODE=Y;;
		u) UNCONDITIONAL_REBUILD=Y;;
		p) PERMANENT=Y;;
		q) QUERY_EXISTING=Y;;
		*) false; exit;;
	esac
done
shift `expr $OPTIND - 1`
if test -n "$UNCONDITIONAL_REBUILD"
then
	QUERY_EXISTING=
	PERMANENT=Y
elif test $# = 0 && test -f cscope.files
then
	# Auto-select query mode if no args & cscope.files present.
	QUERY_EXISTING=Y
fi
if test -n "$QUERY_EXISTING"
then
	PERMANENT=Y
	test $# = 1 && { run cd "$1"; shift; }
	run test $# = 0
else 
	test $# = 0 && set -- .
	system date +%s; MARKER=${REPLY}_$$
	set -- "$@" "$MARKER"
	for D
	do
		test x"$D" = x"$MARKER" && break
		run test -d "$D"
		system readlink -f "$D"
		set -- "$@" "$REPLY"
	done
	while test x"$1" != x"$MARKER"
	do
		shift
	done
	shift
fi
if test -z "$PERMANENT"
then
	while :
	do
		system tempfile; T=$REPLY
		rm "$T"
		mkdir -m 700 "$T" && break
	done
	trap "cd; rm -rf --one-file-system '$T'" 0
	run cd "$T"
fi
if test -n "$QUERY_EXISTING"
then
	test -f cscope.files
else
	run find-c-and-cpp-sources-files "$@" > cscope.files
fi
set cscope -q
test -n "$KERNEL_MODE" && set -- "$@" -k
test -n "$UNCONDITIONAL_REBUILD" && set -- "$@" -u
run "$@"
