#! /bin/sh

# Output a shell script which will recreate the files of which the relative
# path names will be read from standard input. The files will always be
# created in the same order, unless option -S is specified to disable
# pathname sorting.
#
# Only regular files are supported on standard input. Directories will be
# created automatically as required. Executability will be preserved.
#
# Version 2022.147.2
# Copyright (c) 2022 Guenther Brunthaler. All rights reserved.
#
# This script is free software.
# Distribution is permitted under the terms of the GPLv3.

set -e
trap 'test $? = 0 || echo "\"$0\" failed!" >& 2' 0

println() {
	printf '%s\n' "$*"
}

arg() {
	o= s='[.*"$`\\]' r='\\&'
	for a
	do
		if expr x"$a" : x'[-+_%/=,.A-Za-z0-9]*$' = 0 > /dev/null
		then
			a="\"`println "$a" | sed "s/$s/$r/g"`\""
		fi
		o=$o${o:+ }$a
	done
	println "$o"
}

arg1() {
	case $1 in
		-*) set -- -- "$@"
	esac
	arg "$@"
}

defsep='====='
nfirst=false
ldir=
case $1 in
	-S) cat;;
	*) LC_COLLATE=C sort
esac \
| while IFS= read -r f
do
	test ! -L "$f"
	test -f "$f"
	$nfirst && echo
	nfirst=true
	d=`dirname -- "$f"`
	case $d in
		. | "$ldir") ;;
		*) echo mkdir -p "`arg1 "$d"`";;
	esac
	ldir=$d
	m=$defsep
	c=2
	while grep -Fxq -- "$m" "$f"
	do
		m=$defsep$c
		c=`expr $c + 1`
	done
	echo "cat > "`arg "$f"`" << '$m'"
	cat < "$f"
	println "$m"
	test ! -x "$f" || echo chmod +x "`arg "$f"`"
done
