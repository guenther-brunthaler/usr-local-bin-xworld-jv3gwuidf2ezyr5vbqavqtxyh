#! /bin/false
# *Source* this; not execute!
# Accepts a $PATH-like list of paths as argument,
# and adds any missing components to $SANDBOX_WRITE.
# Before doing anything else, removes $HOME from write list.


# fdecl <fdeclname>
alias fdecl=fdecl_grfxx2nkajl22uyl8he2w3w10
names_grfxx2nkajl22uyl8he2w3w10=fdecl
fdecl() {
	alias $1=${1}_grfxx2nkajl22uyl8he2w3w10
	names_grfxx2nkajl22uyl8he2w3w10="$names_grfxx2nkajl22uyl8he2w3w10 $1"
}


fdecl removewrite
removewrite() {
	local DEL NEW OIFS
	DEL=$1
	OIFS=$IFS; IFS=:; set --:$SANDBOX_WRITE; IFS=$OIFS
	while test $# -gt 0; do
		test x"$1" != x"$DEL" && NEW=$NEW${NEW:+:}$1
		shift
	done
	SANDBOX_WRITE=$NEW
}


fdecl addwrite
addwrite() {
	local NEW OIFS
	NEW=$1
	OIFS=$IFS; IFS=:; set --:$SANDBOX_WRITE; IFS=$OIFS
	while test $# -gt 0; do
		test x"$NEW" = x"$1" && return
		shift
	done
	SANDBOX_WRITE=$SANDBOX_WRITE${SANDBOX_WRITE:+:}$NEW
}


fdecl main
main() {
	test x"$1" = x"add" && test x"$2" = x"write" || {
		echo "Usage: . modify-sandbox-pathlist" \
			"add write \"\$PATH_LIST_VAR\""
		return 1
	}
	shift; shift
	local IFS P
	removewrite "$HOME"
	IFS=:
	for P in $*; do
		test -d "$P" || continue
		addwrite "$P"
	done
}


# Snippet low-level runtime.
snrt0_grfxx2nkajl22uyl8he2w3w10() {
	local snrt0rc_grfxx2nkajl22uyl8he2w3w10
	main "$@"
	snrt0rc_grfxx2nkajl22uyl8he2w3w10=$?
	set -- $names_grfxx2nkajl22uyl8he2w3w10
	unset names_grfxx2nkajl22uyl8he2w3w10
	local FnctnNm
	for FnctnNm in "$@"; do
		unset -f "${FnctnNm}_grfxx2nkajl22uyl8he2w3w10"
		unalias "$FnctnNm"
	done
	return $snrt0rc_grfxx2nkajl22uyl8he2w3w10
}


# Invoke snippet low-level runtime.
if snrt0_grfxx2nkajl22uyl8he2w3w10 "$@"; then
	unset -f snrt0_grfxx2nkajl22uyl8he2w3w10
else
	unset -f snrt0_grfxx2nkajl22uyl8he2w3w10
	false
fi
