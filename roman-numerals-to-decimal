#! /bin/sh
# Convert roman numerals (in either letter case) into decimal values. All
# variants mentioned in the Wikipedia article are supported.
#
# Version 2017.346.1
#
# Copyright (c) 2017 Guenther Brunthaler. All rights reserved.
#
# This script is free software.
# Distribution is permitted under the terms of the GPLv3.

awk -f /dev/fd/5 5<< 'EOF' -- "$@" || printf '%s\n' "$0 failed!" >& 2 && false
	# Globals: romdigs, largest_digit, d2v[]

	function init_decoder(    value, digit, factor, i, rl, char) {
		romdigs= "IVXLCDM"; rl= length(romdigs); value= 0.5; factor= 5
		for (i= 1; i <= rl; ++i) {
			char= substr(romdigs, i, 1)
			largest_digit= d2v[char]= d2v[tolower(char)] \
				= value*= factor= 7 - factor
		}
		romdigs= "^[" romdigs tolower(romdigs) "]*$"
	}

	function decode(roman    , n, i, total, partial, last_digit) {
		n= length(roman); total= partial= 0; last_digit= largest_digit
		for (i= 1; i <= n; ++i) {
			if ((digit= d2v[substr(roman, i, 1)]) > last_digit) {
				partial= digit - partial
			} else if (digit < last_digit) {
				total+= partial; partial= digit
			} else {
				partial+= digit
			}
			last_digit= digit
		}
		print total + partial
	}

	function process_arguments(    i, v) {
		for (i= 1; i < ARGC; ++i) if ((v= ARGV[i]) ~ romdigs) decode(v)
	}

	BEGIN {
		init_decoder()
		if (ARGC > 1) { process_arguments(); exit }
	}

	$0 ~ romdigs { decode($0) }
EOF
