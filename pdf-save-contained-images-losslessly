#! /bin/sh
exit_version() {
	wr -s << . && exit
$APP version 2018.101

Copyright (c) 2018 Guenther Brunthaler. All rights reserved.

This script is free software.
Distribution is permitted under the terms of the GPLv3.
.
}
APP=${0##*/}

utility=pdfimages
package=poppler-utils
distro="Debian Linux"

exit_help() {
	wr << . && echo && echo && exit_version
$APP - Extract the images contained within a PDF document without
quality loss

Usage: $APP [ <options> ... ] <pdf_file> [ <output_prefix> ]

$APP extracts all images contained within a PDF document and and saves them
losslessly without any quality loss as individual image files.

<output_prefix> is the common part of the output files to which an image index
number and an image-format specific file extension will be added in order to
form the names of the output files.

When <output_prefix> is not specified, the name of the PDF file minus its file
extension will be used instead.

Options:

-l: Instead of extracting images, show information about the images contained
in the PDF file. Any specified <output_prefix> is not used in this mode.

-b <pagenum>: The number of the first PDF page to examine for images to be
extracted. By default, all pages are examined.

-e <pagenum>: The number of the last PDF page to examine for images to be
extracted. By default, all pages are examined.

-p: Include actual page numbers in output file names.

-V: Display version information and exit.

-h: Display this help and exit.
.
}

wr() {
	if test "$*"
	then
		fold -sw $LINEWIDTH | sed 's/[[:space:]]*$//'
	else
		{
			sep=
			while IFS= read -r line
			do
				printf %s%s "$sep" "$line"
				if test "$line"
				then
					sep=' '
				else
					echo
					test -z "$sep" && continue
					echo; sep=
				fi
			done
			test -z "$sep" || echo
		} | wr -s
	fi
}
MAXWITH=110
LINEWIDTH=`
	cmd=tput; command -v $cmd > /dev/null 2>& 1 \
	&& test -t 0 && $cmd cols \
	|| echo 66
`
test $LINEWIDTH -le $MAXWITH || LINEWIDTH=$MAXWITH

set -e
trap 'test $? = 0 || echo "$0 failed!" >& 2' 0

uo=" -all"
out=true
while getopts lpb:e:hV opt
do
	case $opt in
		b) test "$OPTARG"; uo=$uo" -f $OPTARG";;
		e) test "$OPTARG"; uo=$uo" -l $OPTARG";;
		l) uo=$uo" -list"; out=false;;
		p) uo=$uo" -$opt";;
		h) exit_help;;
		V) exit_version;;
		*) false || exit
	esac
done
shift `expr $OPTIND - 1 || :`

command -v "$utility" > /dev/null 2>& 1 || {
	wr << . && echo && false || exit
The script $APP uses the "$utility" utility internally, which must therefore
be installed. Unfortunately, this is currently not the case.

Please install the package which contains "$utility". At least on $distro,
"$utility" used to be contained within package "$package".

With some luck, the required package on your operating system distribution
might use a similar name.
.
}

test $# != 0; pdf=$1; shift
test -f "$pdf"

if test $# != 0
then
	obase=$1; shift;
else
	obase=${pdf%.*}
	test "$obase" != "$pdf"
	test "$obase"
fi
test $# = 0 # No excess arguments.

set -- "$utility"$uo "$pdf"
$out && set -- "$@" "$obase"
exec "$@"
