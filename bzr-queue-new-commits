#! /bin/sh
#
# Append the new commits as a merge directive to a
# per-user archive of queued commits.
#
# The merge directive will be named like the branch nick.
#
# (c) 2012 by GÃ¼nther Brunthaler.
# This source file is free software.
# Distribution is permitted under the terms of the GPLv3.


die() {
	echo "ERROR: $*" >& 2
	false; exit
}


run() {
	"$@" && return
	die "Command >>>$*<< failed, return code ${?}!"
}


system() {
	REPLY=`run "$@"` || exit
}


getid() {
	run printf '%s\n' "$1" | md5sum -b | cut -c-32
}


cleanup() {
	rm -rf --one-file-system "$TDIR" 2> /dev/null
}


# Replace all char $2 in string $1 by string $3.
# $3 does not contain any $2. Place result in $REPLY.
subst() {
	local i, h, t
	i=$1
	REPLY=
	while test -n "$i"
	do
		t=${i#?}; h=${i%"$t"}
		test x"$h" = x"$2" && h=$3
		REPLY=$REPLY$h; i=$t
	done	
}


UUID="ryflfezxve6lbrwblu1rhddbx"
APP=${0##*/}

MODE=enqueue
UPSTREAM_REV=
TRUNCATE=
while getopts m:TU: OPT
do
	case $OPT in
		m) MODE=move; DESTDIR=$OPTARG;;
		T) TRUNCATE=Y;;
		U) UPSTREAM_REV=$OPTARG;;
		*) exit;
	esac
done
shift `expr $OPTIND - 1`

test -d .bzr || die "Run this from a bzr checkout/branch root dir!"
system bzr nick; BNAME=$REPLY
system getid "$BNAME"; repoid=$REPLY

run test -n "$HOME"
run test -d "$HOME"
: ${XDG_DATA_HOME:=$HOME/.local/share}
DIR=$XDG_DATA_HOME/${APP}_$UUID
test -d "$DIR" || mkdir -m 700 -p "$DIR"
LCD=$DIR/lastcommits
test -d "$LCD" || mkdir -m 700 -p "$LCD"

lcf=$LCD/$repoid.txt
if test -f "$lcf"
then
	system head -n1 "$lcf"; lcid=$REPLY
else
	lcid=
fi
if test -n "$UPSTREAM_REV"
then
	lcid=$UPSTREAM_REV
	echo "Overriding last known upstream revno as $lcid."
fi

system hostname; hqual=${REPLY:+"-"}$REPLY
arch=bzr$hqual.ar

if test x"$MODE" = x"move"
then
	arch=$DIR/$arch
	test -f "$arch" || die "$arch does not exist yet!"
	run test -d "$DESTDIR"
	echo "Moving archive '$arch' to directory '$DESTDIR'."
	run mv -i "$arch" "$DESTDIR"/
	exit
fi

system bzr revno; lc=$REPLY
if test $lc -le ${lcid:-0}
then
	echo "Already done; nothing to do."
	exit
fi

while :
do
	system tempfile; TDIR=$REPLY
	run rm "$TDIR"
	mkdir -m 700 "$TDIR" && break
done
trap cleanup 0

upstream=$TDIR/upstream
if test -n "$lcid"
then
	run bzr branch -r$lcid --no-tree . "$upstream"
else
	run bzr init "$upstream"
	run bzr remove-tree "$upstream"
fi

mdrc=$repoid${lc:+"-"}$lc.bzr
run bzr send -o "$TDIR/mdrc" --no-patch "$upstream"

(
	run cd "$TDIR"
	esc="<${UUID}_escape>"
	subst "$BNAME" ',' "$esc"
	run sed -e "
		s,\(^ *# *target_branch: *\).*,\1$REPLY,
		s/$esc/,/g
	" mdrc > "$mdrc"
	if test -n "$TRUNCATE"
	then
		echo "Truncating archive before adding commits."
	else
		test -f "$DIR/$arch" && run cp "$DIR/$arch" .
	fi
	run ar q "$arch" "$mdrc"
	run mv "$arch" "$DIR"/
) || exit
run printf '%s\n%s\n' "$lc" "$BNAME" > "$lcf"
vs=`expr $lc - ${lcid:-0}`
echo "Successfully added $vs commits!"
echo "Here are the last entries in the queue:"
run ar t "$DIR/$arch" | tail
