#! /bin/sh
exit_version() {
	cat << ===; exit
$APP Version 2023.130
Copyright (c) 2023 Guenther Brunthaler. All rights reserved.

This script is free software.
Distribution is permitted under the terms of the GPLv3.
===
}
APP=${0##*/}

exit_help() {
	cat << ===; echo; exit_version
$APP - print remote command to set system clock

Usage: ssh root@somehost \`$APP\`

$APP prints a string suitable as
additional arguments to the 'ssh' command to be executed on the
remote system.

It does not change anything on the local system.

The commands will set the remote system's current date and time
to the same time as the local system.

Actually, two commands will be attempted in order:

* First, GNU extensions of 'date' will be tried in order to set
the date/time with 1 second resolution.

* If this does not work, POSIX-compliant arguments for 'date'
will be used which can only set date/time with 1 minute
resolution.

Note that the remote user needs administrative privileges in
order to be allowed to set the system time.

Also note that the command does not save the new system time to
the remote system's hardware clock. This needs to be done
separately if required.
===
}

set -e
trap 'test $? = 0 || echo "$0 failed!" >& 2' 0

normalize_line_contents=false
while getopts hV opt; do
	case $opt in
		h) exit_help;;
		V) exit_version;;
		*) false || exit
	esac
done
shift $((OPTIND - 1))

# Set $REPLY to a quoted representation of all the arguments
# ready for 'eval set -- $REPLY' to reconstruct the arguments.
qin() {
	#local REST S Q R
	REPLY=
	for S
	do
		Q=; R=
		while test -n "$S"
		do
			REST=${S#?}; S=${S%"$REST"}
			case $S in
				\$ | \` | \" | \\) S=\\$S;;
				" " | "$NL" | "$TAB") Q=Y;;
			esac
			R=$R$S; S=$REST
		done
		test -n "$Q" && R=\"$R\"
		REPLY=$REPLY${REPLY:+ }$R
	done
}
# Construct required constants $TAB and $NL.
NL=`printf '\t\n:'`; TAB=${NL%??}; NL=${NL%?}; NL=${NL#?}

# GNU/Busybox variant.
dg=`date -u +'%Y-%m-%d %H:%M:%S'`
qin "$dg"; dg=$REPLY
# POSIX variant as fallback.
dp=`date -u +%m%d%H%M%Y`
qin "date -u -s $dg || date -u $dp"
echo "sh -c $REPLY"
