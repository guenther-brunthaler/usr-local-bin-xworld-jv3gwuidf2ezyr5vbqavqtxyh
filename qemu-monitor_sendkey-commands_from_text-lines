#! /bin/sh
# Reads lines of text and outputs QEMU monitor "sendkey" commands to "type"
# those lines within the guest via QEMU keystrokes. Assumes English keyboard
# layout within the VM console.
#
# I use this to convert 2 lines of text containing username and password into
# keystrokes to be sent as QEMU keyboard input; thus logging in at the guest
# console prompt. This allows me to use secure 512 bit passwords within the
# guest without a need to type them manually.
#
# (c) 2013-2015 by Guenther Brunthaler.
# This script is free software.
# Distribution is permitted under the terms of the GPLv3.
awk '{
	p= $0
	for (i= 0; i < length(p); ++i) {
		k= substr(p, i + 1, 1)
		if (k ~ /[A-Z]/) k= "shift-" tolower(k)
		else if (k == "-") k= "minus"
		else if (k == "?") k= "shift-minus"
		else if (k == "=") k= "equal"
		else if (k == "\t") k= "tab"
		else if (k == "\033") k= "esc"
		else if (k == "\010") k= "backspace"
		else if (k == ",") k= "comma"
		else if (k == ";") k= "shift-comma"
		else if (k == ".") k= "dot"
		else if (k == "/") k= "slash"
		else if (k == "*") k= "asterisk"
		else if (k == " ") k= "spc"
		else if (k == "\\") k= "backslash"
		else if (k == "<") k= "less"
		else if (k == ">") k= "shift-less"
		else if (k == "_") k= "shift-minus"
		else if (k == "ö") k= "semicolon"
		else if (k == "Ö") k= "shift-semicolon"
		else if (k == "ä") k= "apostrophe"
		else if (k == "Ä") k= "shift-apostrophe"
		else if (k == "ü") k= "bracket_left"
		else if (k == "Ü") k= "shift-bracket_left"
		else if (k == "+") k= "bracket_right"
		else if (k == "!") k= "shift-1"
		else if (k == "\"") k= "shift-2"
		else if (k == "$") k= "shift-4"
		else if (k == "#") k= "shift-3"
		else if (k == "%") k= "shift-5"
		else if (k == "&") k= "shift-6"
		else if (k == "/") k= "shift-7"
		else if (k == "(") k= "shift-8"
		else if (k == ")") k= "shift-9"
		else if (k == "{") k= "alt_r-7"
		else if (k == "[") k= "alt_r-8"
		else if (k == "]") k= "alt_r-9"
		else if (k == "}") k= "alt_r-0"
		else if (k == "@") k= "alt_r-q"
		else if (k == "^") {print "sendkey grave_accent"; k= "spc"}
		else if (k == "~") {
			print "sendkey alt_r-bracket_right"; k= "spc";
		}
		else if (k !~ /[<a-z0-9]/) {
			print "Unsupported character \"" k "\" encountered!" \
			> "/dev/stderr"
			exit 1
		}
		print "sendkey " k
	}
	print "sendkey ret"
}' "$@"
