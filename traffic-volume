#! /bin/sh
# Displays the combined up- and download byte count on the specified interface
# (defaults to ppp0) since the interface was brought up.

set -e
log=/var/log/ppp-traffic.log

trap 'test $? = 0 || echo "${0##*/} failed!" >& 2' 0
export PATH=/sbin:/usr/sbin:/usr/local/sbin:$PATH

now=`date +%s`
start=`date -d "@$now" +'%Y-%m-%d'`
start=`date -d "$start" +%s`
{
	test -e "$log" && awk '
		# csv_line := "" | csv_line "," csv_field.
		# csv_field := "\"" qfield
		BEGIN {nv= q= 0}
		{
			i= 1; n= length
			if (q) {
				s= v[nv]
				while (i <= n) {
                                        if (e= index(substr($0, i), "\"")) {
                                        	e+= i - 1
                                        	
                                                ni= (e+= i - 1) + 1
                                        } else {
                                                ni= e= n + 1
                                        }
                                        v[nv++]= substr($0, i, e - i)

				}
			}
			nv= 0
			while (i <= n) {
				if (substr($0, i, 1) == "\"") {
					av= ""; i+= 1
					
				} else {
					if (e= index(substr($0, i), ",")) {
						ni= (e+= i - 1) + 1
					} else {
						ni= e= n + 1
					}
					v[nv++]= substr($0, i, e - i)
				}
				i= ni
			}
			if (/^"/)
			if (/^[1-9]/) {
				if (nohdr) exit 1
			} else {
				
			}
		}
	' "$log"
	{ LC_ALL=C ifconfig 2> /dev/null || true; } | awk '
		function z() {
			r= t= 0; ifc= noifc
		}
		function p() {
			print ifc "," "'"$now"'," r "," t
			z()
		}
		BEGIN {noifc= ""; z()}
		/^[^:[:space:]]+:/ {
			if (ifc != noifc) p()
			ifc= substr($0, 1, index($0, ":") - 1)
		}
		$1 ~ "[RT]X" && /bytes/ {
			v= 0
			for (i= 1; i <= NF; ++i) {
				if ($i ~ /^[0-9]+$/ && $i > v) v= $i
			}
			if ($1 == "RX") r= v; else t= v
		}
		END {p()}
	'
}

exit
 | awk -F, '
	$1 ~ /^[1-9]/ && $1 >= '$start' {s+= $2 + $3}
	END {printf "%.2f\n", s / 2 ^ 20}
' | {
	c=`locale -k LC_NUMERIC | grep decimal_point`
	decimal_point='.'; eval "$c"
	sed -e "s/[.]/$decimal_point/" -e 's/$/ MiB/'
}
