#! /bin/sh

# Remove or restore common line-prefixes and -suffixes.
#
# The presence of $marker in the first line triggers restoration. It adds
# the prefix before $marker and the suffix after $marker to all the remaining
# lines.
#
# Otherwise, removal operation takes place. It determines the longest common
# prefix and suffix of all lines and removes them. Then it adds a new first
# line containing $marker and the removed pre- and suffixes.
#
# Version 2023.211
# Copyright (c) 2022-2023 Guenther Brunthaler. All rights reserved.
#
# This document is free documentation.
# Distribution is permitted under the terms of the GFDL-1.3.

set -e
cleanup() {
	rc=$?
	$redir5 && exec 5>& -
	test "$T" && rm -- "$T"
	test $rc = 0 || echo "\"$0\" failed!" >& 2
}
T=
redir5=false
trap cleanup 0
trap 'exit $?' HUP INT TERM QUIT
marker='$QSTR$'
while getopts m:w: opt
do
	case $opt in
		m) marker=$OPTARG;;
		*) false || exit
	esac
done
shift `expr $OPTIND - 1 || :`

die() {
	printf '%s\n' "$*" >& 2
	false || exit
}

tfile() {
	mktemp -- "${TMPDIR:-/tmp}/${0##*/}.XXXXXXXXXX"
}

first=true
while IFS= read -r line
do
	if $first
	then
		first=false
		case $line in
			*"$marker"*)
				revert=true
				prefix=${line%%"$marker"*}
				suffix=${line##*"$marker"}
				test x"$prefix$marker$suffix" = x"$line" || {
					die "Ambiguous marker!"
				}
				exec 5>& 1; redir5=true
				continue
				;;
			*)
				revert=false
				prefix=$line
				suffix=$line
				any_other=false
				T=`tfile`
				exec 5> "$T"; redir5=true
		esac
	elif $revert
	then
		line=$prefix$line$suffix
	else
		any_other=true
		while test "$suffix"
		do
			tline=${line%"$suffix"}
			test "$tline" != "$line" && break
			suffix=${suffix#?}
		done
		while test "$prefix"
		do
			tline=${line#"$prefix"}
			test "$tline" != "$line" && break
			prefix=${prefix%?}
		done
	fi
	printf '%s\n' "$line" >& 5
done
redir_5=false; exec 5>& -
$revert && exit
$any_other || { prefix=; suffix=; }
printf '%s%s%s\n' "$prefix" "$marker" "$suffix"
while IFS= read -r line
do
	line=${line%"$suffix"}
	printf '%s\n' "${line#"$prefix"}"
done < "$T"
