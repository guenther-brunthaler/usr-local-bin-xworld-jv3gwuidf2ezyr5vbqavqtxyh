#! /bin/sh
#
# Find unallocated numerical ranges in a series of integer values (negative
# values are allowed) read from standard input and output them in ascending
# order.
#
# Useful for finding unused UIDs etc.
#
# Option "-p" generates easily machine-parsable yet lesser human-friendly
# output.
#
# Version 2022.6
#
# Copyright (c) 2022 Guenther Brunthaler. All rights reserved.
#
# This source file is free software.
# Distribution is permitted under the terms of the GPLv3.

set -e
trap 'test $? = 0 || echo "\"$0\" failed!" >& 2' 0

parsable=0
while getopts mp opt
do
	case $opt in
		m | p) parsable=1;;
		*) false || exit
	esac
done
shift `expr $OPTIND - 1 || :`

test $# = 0

sort -un | awk -v m=$parsable -f /dev/fd/5 5<< 'EO_AWK'

# Globals: m, p

{
	process($1)
}

function process(c) {
	if (p == "") {
		if (!m) pra("-infinity", c - 1)
	} else {
		if (c > p + 1) pra(p + 1, c - 1)
	}
	p= c
}

function pra(lo, hi) {
	if (m) print lo " " hi
	else if (lo == hi) print q(lo)
	else print q(lo) " - " q(hi)
}

function q(n) {
	return m || n ~ /^[[:alnum:]]/ ? n : "(" n ")"
}

END {
	if (!m && p != "") pra(p + 1, "infinity")
}

EO_AWK
