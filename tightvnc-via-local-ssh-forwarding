#! /bin/sh
# Launch TightVNC viewer through a locally-forwarded TCP tunnel.
VERSION=8.212


usage() {
	cat <<- .
	
	tightvnc-via-local-ssh-forwarding - TightVNC via SSH tunnel
	
	Calls TightVNC with the right options in order to connect
	to an SSH server which is listening either at a local port,
	or is listening on a different machine but has its listening
	port forwarded to the local machine (i. e. via SSH).

	Usage: 	tightvnc-via-local-ssh-forwarding [ options ]
	
	options:
	
	--quality <quality>, -q <quality>:
	  Set JPEG quality. Defaults to $QUALITY.
	--compression <strength>, -c <strength>:
	  Set compression strength. Defaults to $COMPRESSION.
	--port <port>, -p <port>:
	  Set local port to connect to. Defaults to $PORT.
	--password-file <name>, -P <name>:
	  Password file to use, as created by vncpasswd.
	  Defaults to "$PWDFILE".
	  Specifying an empty password disables
	  the default password usage.
	--help, -h: Display this help text.
	--verbose, -v: Verbose operation.
	--dry-run, --simulate, -n:
	  Just print what would be done, but don't actually
	  do anything.

	Version $VERSION
	(c) 2007 Guenther Brunthaler.
	This source file is free software.
	Distribution is allowed under the terms of the GPLv3.
.
}
                                                                                                                             

die() {
	{
		echo "ERROR: $*"
		echo "Use $0 --help for help."
	} >& 2
	exit 1
}


inform() {
	test -z "$VERBOSE" && return
	echo "$*"
}


run() {
	local TRY RC
	while true; do
		case "$1" in
			--) shift; break;;
			-try) TRY=1;;
			*) break;;
		esac
		shift
	done
	if [ -n "$DRY" ]; then
		echo "SIMULATION: $*"
	else
		"$@" && return
		RC=$?
		test -n "$TRY" && return $RC
		die "Command >>>$*<<< failed return code $RC!"
	fi
}


# Start of command line processing.
# Define presets.
VERBOSE=
DRY=
QUALITY=4
COMPRESSION=9
PORT=5900
PWDFILE="$HOME/.vnc/passwd"
#
COPTS=
while true; do
	if [ -z "$COPTS" ]; then
		case "$1" in
			-?*) COPTS="$1"; shift;;
			*) break;;
		esac
	fi
	if [ "${COPTS#--}" = "$COPTS" ]; then
		TAIL="${COPTS#-?}"; # Switch clustering.
		COPT="${COPTS%$TAIL}"; COPTS="${TAIL:+-}$TAIL"
	else
		COPT="$COPTS"; COPTS=
	fi
	# Any arguments are at $1 and onwards; must be shifted off.
	case "$COPT" in
		--) break;; # Must be first!
		--quality | -q) QUALITY="$1"; shift;;
		--compression | -c) COMPRESSION="$1"; shift;;
		--port | -p) PORT="$1"; shift;;
		--password-file | -P) PWDFILE="$1"; shift;;
                --help | -h) usage; exit;;
		--version)
			echo "Version $VERSION"
			exit;;
		--verbose | -v) VERBOSE=1;;
		--dry-run | --simulate | -n) DRY=1;;
		*) die "Unknown option '$COPT'!";; # Must be last!
	esac
done
# Shift off ordinal arguments.
test $# -ge 1 && { CHECK_INTERVAL="$1"; shift; }
#test $# -ge 1 || die "Missing argument - limit for accumulated sum!"
#LIMIT="$1"; shift
# Check for excess arguments.
test $# = 0 || die "Unexpected excess arguments: $*"
# End of command line processing.
inform "Assumption: Local port 5900 has been forwarded (i. e. via SSH)"
inform "to remote TightVNC server."
run exec /usr/bin/vncviewer \
	${PWDFILE:+-passwd "$PWDFILE"} \
	-compresslevel "$COMPRESSION" -quality "$QUALITY" \
	-encodings "copyrect tight hextile" localhost::$PORT
