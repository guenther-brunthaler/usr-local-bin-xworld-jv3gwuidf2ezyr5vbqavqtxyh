#! /bin/sh
# Opens all file or URL arguments in a "surf" instance (all together as tabs
# of the same new window by default).
#
# If no arguments are specified but standard input is not a terminal, use all
# the lines read from standard input as arguments.
#
# If no effective arguments are available,
# use pathname "/" as default. Pathnames can be absolute
# or relative, but they must refer to existing filesystem objects.
#
# If all effective arguments are 'file://'-URLs, enable bandwidth-consuming
# features of "surf". Otherwise, start the "surf" instances with those
# features disabled.
#
# Version 2021.32
#
# Copyright (c) 2018-2021 Guenther Brunthaler. All rights reserved.
#
# This script is free software.
# Distribution is permitted under the terms of the GPLv3.

cookies=~/.surf/cookies.txt

# Options enabled/set:
#
# -a '@' Reject third-party cookies
# -k not kiosk-mode
# -f not fullscreen mode
# -g disable geolocation
# -i disable image loading
# -p disable PlugIns (sch as JAVA applet support)
# -s disable JavaScript
#
# Options which might seem to be useful, but aren't because new tabs won't
# inherit them:
#
# -z 1.5 Zoom level
# -m disable user stylesheets
# -d disable disk cache
#
# The WebInspector is left enabled because it costs neglectible RAM as long as
# it is not actually being used.
surf_options='-a @ -kfgips'
surf_options_local_xfm='tr i I'

set -e
cleanup() {
	rc=$?
	test "$TF" && rm -- "$TF"
	test $rc = 0 || echo "\"$0\" failed!" >& 2
}
TF=
trap cleanup 0
trap 'exit $?' INT QUIT TERM HUP

untabbed=false
dry_run=false
while getopts un opt
do
	case $opt in
		u) untabbed=true;;
		n) dry_run=true;;
		*) false || exit
	esac
done
shift `expr $OPTIND - 1 || :`

mkdir -p -- "`dirname -- "$cookies"`"
> "$cookies" # Remove all cookies from the last session.

println() {
	printf '%s\n' "$*"
}

url_bypass() {
	expr x"$1" : x'[a-z]\{2,10\}://.' > /dev/null || return
}

TF=`mktemp -- "${TMPDIR:-/tmp}/${0##*/}".XXXXXXXXXX`
urlencode -pu -- ${1+"$@"} > "$TF"
test -s "$TF" || echo file:/// > "$TF"

case `sed '/^file:\/\/./d' < "$TF" | wc -c` in
	0) surf_options=`println "$surf_options" | $surf_options_local_xfm`
esac
set -- $surf_options -c "$cookies" --
if $untabbed
then
	:
else
	if $dry_run
	then
		tab='0x???...???'
	else
		tab=`tabbed -dc`
	fi
	test "$tab"
	set -- -e "$tab" "$@"
fi
set surf "$@"
while IFS= read -r url
do
	if $dry_run
	then
		echo "$@" "$url"
	else
		"$@" "$url" < /dev/null > /dev/null 2>& 1 &
	fi
done < "$TF"
if $dry_run
then
	:
else
	if test -t 1
	then
			cat << '===='
The most important shortcuts:

[Shift]+[Ctrl]+[Return] or middle-clicking on link opens a new tab
[Ctrl]+[q] closes current tab (middle-clicking on a tab also closes it)
[Ctrl]+[g] prompts for URL
[Esc] stop loading current page
[Ctrl]+[r] reload page

[Ctrl]+[y] copy URI
[Shift]+[Ctrl]+[i] enables/toggles auto image loading
[Shift]+[Ctrl]+[s] enables/toggles JavaScript
[Shift]+[Ctrl]+[v] enables/toggles plugins
[Shift]+[Ctrl]+[o] examine current web page
[Ctrl]+[o] show source code of current web page
[F11] toggle full-screen mode

See "man tabbed" and "man surf" for more keyboard shortcuts.
====
	fi
fi
