#! /bin/sh
# Take a screenshot. Will try different methods once this script has been
# extended to support different methods.
#
# Version 2016.37
# (c) 2015 - 2016 by Guenther Brunthaler.
# This script is free software.
# Distribution is permitted under the terms of the GPLv3.
set -e

cleanup() {
	local rc=$?
	exec 2>& 3 3>& -
	test $rc = 0 || xmessage -file "$T"
	rm -- "$T"
	test $rc = 0 || echo "$APP failed!" >& 2
}

APP=${0##*/}
exec 3>& 2
T=`mktemp "${TMPDIR:-/tmp}/$APP.XXXXXXXXXX"`
trap cleanup 0
exec 2> "$T"
for tool in xwininfo import notify='libnotify-notify-send|notify-send'
do
	var=${tool%%=*}; test x"$var" != x"$tool" && tool=${tool#*=}
	executable=
	while test -n "$tool"
	do
		command=${tool%%|*}
		test x"$command" != x"$tool" && tool=${tool#*|}
		executable=`which "$command"` && break
	done
	test -n "$executable"; test -x "$executable"
	eval "$var=\$executable"
done
case $1 in
	--window | --current)
		window=`
			LC_ALL=C "$xwininfo" \
			| sed 's/.*Window id: \([^ ]*\).*/\1/; t; d'
		`
		test -n "$window"
		;;
	*)
		window=root
esac
test -n "$HOME"; test -d "$HOME"
outname=$HOME/`date +'screenshot-%Y%m%d_%H%M%S.png'`
"$import" -window "$window" "$outname"
"$notify" -t 5 "Screenshot has been taken!" "Saved as file '$outname'."
