#! /bin/sh
version() {
	cat << '===='
Watch the current directory for .html files which can be updated by asciidoc
from corresponding .txt (and .asciidoc and .adoc) files.

Version 2020.11
Copyright (c) 2019-2020 Guenther Brunthaler. All rights reserved.

This script is free software.
Distribution is permitted under the terms of the GPLv3.
====
}

set -e
trap 'test $? = 0 || echo "\"$0\" failed!" >& 2' 0

custom_bb=
while getopts b: opt
do
	case $opt in
		b) custom_bb=$OPTARG;;
		*) false || exit
	esac
done
shift `expr $OPTIND - 1 || :`

die() {
	printf '%s\n' "$*" >& 2
	false || exit
}

applet=inotifyd
for bb in \
	${custom_bb:+"$custom_bb"} \
	busybox \
	busybox-site \
	busybox-localsite \
	busybox-pbyqxzl1ktqlk3fjm3arlrclg \
	false
do
	command -v -- "$bb" > /dev/null 2>& 1 || continue
	"$bb" 2> /dev/null \
	| grep -q '[^[:alnum:]]inotifyd[^[:alnum:]]' && break
done
test $bb != false || die "No BusyBox version providing" \
	"the '$applet' applet could be located!" \
	"Please install one or build it yourself."

command -v asciidoc > /dev/null 2>& 1 || die "asciidoc is not installed!"

is_newer() {
	local f
	case $1 in
		-*) f=./$1;;
		*) f=$1
	esac
	test `find -H "$f" -newer "$2" | wc -l` = 1 || return
}

convert() {
	echo
	echo "`
		date +'%Y-%m-%d %H:%M:%S'
	` \"$1\" has changed and is being converted..."
	asciidoc "$1"
	echo "`date +%M:%S` \"$2\" has been updated."
}

unwrap() {
	sep=
	while read -r line
	do
		case $line in
			'') test -n "$sep" && echo; sep=; echo;;
			*) printf %s "$sep$line"; sep=' '
		esac
	done
	test -n "$sep" && echo
}

patterns() {
	version | unwrap | sed 's/.*\([.]txt.*\) files.*/\1/; t; d'
}

{
	unwrap << ===
"$bb $applet" is watching directory "`pwd`" for changed `patterns` files for
which an associated .html file exists.

It will then run asciidoc to update the associated .html files automatically.
===
	echo; version | sed '/^[Vv]ersion /!d'; echo
	echo "Press [Ctrl]+[c] to stop watching the directory."
} | fold -sw 66
$bb $applet - .:yMw | {
	ht=`printf '\t:'`; ht=${ht%:}
	while IFS=$ht read -r f f f
	do
		case $f in *.txt | *.asciidoc | *.adoc)
			h=${f%.*}.html
			test -f "$h" || continue
			is_newer "$f" "$h" && convert "$f" "$h"
		esac
	done
}
